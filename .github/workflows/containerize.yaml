name: containerize

on: push

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: test
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test_Result
          path: test-results.xml

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Coverage Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-result
          path: coverage

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, coverage]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/my-image:latest

      - name: List Docker images
        run: docker images

      - name: Test Docker container
        run: |
          docker run --name my-image -d \
            -p 3000:3000 \
            -e MONGO_URI="mongodb+srv://supercluster.d83jj.mongodb.net/superData" \
            -e MONGO_USERNAME="superuser" \
            -e MONGO_PASSWORD="SuperPassword" \
            ${{ secrets.DOCKER_USERNAME }}/my-image:latest

          sleep 10  # wait for container to start

          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my-image)
          echo "Container IP: $IP"

          echo "Testing Image URL using wget"
          wget -q -O - http://127.0.0.1:3000/live | grep live

          docker stop my-image
          docker rm my-image

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-image:latest